name: ocean_seller
author: eightballer
version: 0.1.0
type: skill
description: The weather station skill implements the functionality to sell weather
  data.
license: Apache-2.0
aea_version: '>=1.0.0, <2.0.0'
fingerprint:
  __init__.py: QmeRVgNCPPftthrxLRAD5T8zPioqYUWbUTctXZuXGz92ib
  behaviours.py: QmXJpPHJ2WdGEshLW7ky8tnhUE2sv94ivP62S1KFtENLfM
  dialogues.py: QmWxj5PGgc7AhXyG8mReJ41LYP6eRZ8mUQtWwFrwCZjMKg
  handlers.py: QmYkRMh7miKiFZ2znJ1h4pfnYoQBUVgAiNMEuVB5UtPLox
  strategy.py: QmQcznrTMiHNqGzbSb7LE3JJpMgRVLwGD59dKEwfRxzxwa
fingerprint_ignore_patterns: []
connections:
- fetchai/ledger:0.21.5
contracts: []
protocols:
- fetchai/default:1.1.7
- fetchai/fipa:1.1.7
- fetchai/ledger_api:1.1.7
- fetchai/oef_search:1.1.7
skills: []
behaviours:
  ocean_behaviour:
    args: {}
    class_name: OceanSellerBehaviour
  ocean_c2d:
    args: {}
    class_name: OceanC2DBehaviour
  service_registration:
    args:
      services_interval: 20
    class_name: GenericServiceRegistrationBehaviour
handlers:
  fipa:
    args: {}
    class_name: GenericFipaHandler
  ledger_api:
    args: {}
    class_name: GenericLedgerApiHandler
  ocean:
    args: {}
    class_name: OceanHandler
  oef_search:
    args: {}
    class_name: GenericOefSearchHandler
  storj:
    args: {}
    class_name: StorjHandler
models:
  default_dialogues:
    args: {}
    class_name: DefaultDialogues
  fipa_dialogues:
    args: {}
    class_name: FipaDialogues
  ledger_api_dialogues:
    args: {}
    class_name: LedgerApiDialogues
  oef_search_dialogues:
    args: {}
    class_name: OefSearchDialogues
  strategy:
    args:
      algo_exchange_params:
        datatoken_address: ''
        datatoken_amt: 50
        ocean_amt: 1
        rate: 1
      algorithm_params:
        token0_name: DATA1
        token1_name: DATA1
        amount_to_mint: 100
        language: python
        format: docker-image
        version: '0.1'
        entrypoint: python $ALGO
        image: oceanprotocol/algo_dockers
        tag: python-branin
        checksum: sha256:8221d20c1c16491d7d56b9657ea09082c0ee4a8ab1a6621fa720da58b09580e4
        files_url: https://raw.githubusercontent.com/oceanprotocol/c2d-examples/main/branin_and_gpr/gpr.py
        name: gpr
        author: Trent
        license: CCO
        date_created: '2019-12-28T10:55:11Z'
        data_nft_name: algo_nft_c2d
        datatoken_name: algo_token
        description: gpr
        has_pricing_schema: true
      data_exchange_params:
        datatoken_address: ''
        datatoken_amt: 50
        ocean_amt: 1
        rate: 1
      data_for_sale:
        generic: data
      data_to_compute_params:
        token0_name: DATA1
        token1_name: DATA1
        amount_to_mint: 100
        data_nft_name: data_nft_c2d
        datatoken_name: datatoken_c2d
        dataset_url: https://raw.githubusercontent.com/oceanprotocol/c2d-examples/main/branin_and_gpr/branin.arff
        name: example
        author: Trent
        license: CCO
        date_created: '2019-12-28T10:55:11Z'
        description: Compute service to run GPR algorithm.
        has_pricing_schema: true
      deployments:
        data_to_compute: {}
        data_download: {}
        algorithm: {}
      download_params:
        datatoken_address: ''
        datatoken_amt: 1
        max_cost_ocean: 10
        asset_did: ''
        exchange_id: ''
      has_data_source: false
      is_ledger_tx: true
      location:
        latitude: 51.5194
        longitude: 0.127
      service_data:
        key: seller_service
        value: generic_service
      service_id: generic_service
      unit_price: 10
    class_name: GenericStrategy
is_abstract: false
dependencies: {}
